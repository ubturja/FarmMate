services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: farmmate-postgres
    environment:
      POSTGRES_DB: farmmate
      POSTGRES_USER: farmmate
      POSTGRES_PASSWORD: farmmate123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - farmmate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U farmmate -d farmmate"]
      interval: 10s
      timeout: 5s
      retries: 5

  # IPFS Node
  ipfs:
    image: ipfs/go-ipfs:v0.20.0
    container_name: farmmate-ipfs
    ports:
      - "4001:4001"   # IPFS swarm
      - "5001:5001"   # IPFS API
      - "8080:8080"   # IPFS Gateway
    volumes:
      - ipfs_data:/data/ipfs
    environment:
      - IPFS_PROFILE=server
    networks:
      - farmmate-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5001/api/v0/version"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Hardhat Local Blockchain
  hardhat:
    build:
      context: ./contract
      dockerfile: Dockerfile
    container_name: farmmate-hardhat
    ports:
      - "8545:8545"
    volumes:
      - ./contract:/app
      - hardhat_data:/app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - farmmate-network
    command: npx hardhat node --hostname 0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: farmmate-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=farmmate
      - DB_USER=farmmate
      - DB_PASSWORD=farmmate123
      - RPC_URL=http://hardhat:8545
      - PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
      - IPFS_URL=http://ipfs:5001
      - PORT=3001
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      ipfs:
        condition: service_healthy
      hardhat:
        condition: service_healthy
    networks:
      - farmmate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: farmmate-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_CONTRACT_ADDRESS=0x2c7d77410317c1b342d8aa07Ea28e81b0e3779cD
      - REACT_APP_RPC_URL=http://localhost:8545
      - REACT_APP_IPFS_URL=http://localhost:5001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - farmmate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AI Service (Python)
  ai-service:
    build:
      context: ./ai
      dockerfile: Dockerfile
    container_name: farmmate-ai
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ./ai:/app
    networks:
      - farmmate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: farmmate-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - farmmate-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: farmmate-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - farmmate-network

volumes:
  postgres_data:
    driver: local
  ipfs_data:
    driver: local
  hardhat_data:
    driver: local
  redis_data:
    driver: local

networks:
  farmmate-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
